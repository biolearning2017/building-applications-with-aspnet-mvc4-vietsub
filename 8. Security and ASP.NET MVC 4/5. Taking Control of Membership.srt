1
00:00:01,000 --> 00:00:05,000
Before we get in to registering and logging in and seeing how to require authentication

2
00:00:05,000 --> 00:00:09,000
in the application, let me show you a few steps you can take to have more control

3
00:00:09,000 --> 00:00:13,000
over what's happening behind the scenes, particularly at the database layer

4
00:00:13,000 --> 00:00:17,000
and particularly if you want to customize the information that's being stored about a user.

5
00:00:17,000 --> 00:00:22,000
The first step I would recommend is coming into the project and finding the Filters folder.

6
00:00:22,000 --> 00:00:26,000
Inside of here you'll find the file, Initialize SimpleMembershipAttribute.

7
00:00:26,000 --> 00:00:29,000
If we open this up, there's a lot of complex code in here

8
00:00:29,000 --> 00:00:34,000
because when you start a new MVC 4 application with this project template that we used,

9
00:00:34,000 --> 00:00:37,000
the internet project template, it's not 100 percent sure

10
00:00:37,000 --> 00:00:40,000
that you want to use Forms Authentication.

11
00:00:40,000 --> 00:00:42,000
So there's a lot of complex code here to make sure

12
00:00:42,000 --> 00:00:45,000
that Forms Authentication is initialized in a lazy manner.

13
00:00:45,000 --> 00:00:48,000
Perhaps you're not even going to use a database in this website.

14
00:00:48,000 --> 00:00:51,000
And in that case, none of this code would have to execute.

15
00:00:51,000 --> 00:00:55,000
But if you've already decided that you are going to use Forms Authentication,

16
00:00:55,000 --> 00:00:57,000
there's no reason to have all of this code.

17
00:00:57,000 --> 00:01:00,000
What you really want to get to is the essence inside of here

18
00:01:00,000 --> 00:01:04,000
which is WebSecurity dot InitializeDatabaseConnection.

19
00:01:04,000 --> 00:01:08,000
This is a call to initialize all the membership infrastructure and tell it,

20
00:01:08,000 --> 00:01:12,000
a name of the connection string that you're going to use to connect to the database,

21
00:01:12,000 --> 00:01:14,000
which is DefaultConnection, the same database we're using

22
00:01:14,000 --> 00:01:19,000
to store a restaurant information is also specifies the name of the table

23
00:01:19,000 --> 00:01:22,000
that will contain user information, its UserProfile,

24
00:01:22,000 --> 00:01:28,000
a column that contains the primary key value for a user, so it can look a user

25
00:01:28,000 --> 00:01:32,000
up given their ID value and also the column that contains the UserName.

26
00:01:32,000 --> 00:01:37,000
You can have as many other columns in this table as you want when you store user profiles,

27
00:01:37,000 --> 00:01:40,000
but you at least need to give it a primary key and the user name.

28
00:01:40,000 --> 00:01:45,000
If we know we're using Forms Authentication, we might as well take this line of code and cut it

29
00:01:45,000 --> 00:01:49,000
out of here, Ctrl X, and run it during application startup.

30
00:01:49,000 --> 00:01:52,000
So I will come into Global.asax.cs

31
00:01:52,000 --> 00:01:57,000
and inside the application start method I will paste that code inside of here.

32
00:01:57,000 --> 00:02:01,000
We'll need to bring in a namespace, so control period and select that first entry,

33
00:02:01,000 --> 00:02:05,000
this WebSecurity class is in the WebMatrix.WebDataNameSpace.

34
00:02:05,000 --> 00:02:07,000
Now that namespace is added and we have legal C# code.

35
00:02:07,000 --> 00:02:14,000
If you want to be consistent, you could wrap up this call into some static method on a class

36
00:02:14,000 --> 00:02:16,000
so everything looks like something .Register.

37
00:02:16,000 --> 00:02:18,000
But right now we'll keep things simple

38
00:02:18,000 --> 00:02:21,000
and just leave initialize database connection right here in the application start.

39
00:02:21,000 --> 00:02:26,000
Now that that is here, there's no use to have this filter.

40
00:02:26,000 --> 00:02:28,000
So we'll come into this filter and delete it.

41
00:02:28,000 --> 00:02:32,000
And yes, the next time you build you'll get compiler errors.

42
00:02:32,000 --> 00:02:34,000
But we're going to fix this.

43
00:02:34,000 --> 00:02:37,000
Before I fix this, there's one more step I want to take.

44
00:02:37,000 --> 00:02:44,000
Inside of the Models folder, you will find an AccountModel.cs file.

45
00:02:44,000 --> 00:02:48,000
Inside of here, there's a class that derives from DbContext, you recognize that now

46
00:02:48,000 --> 00:02:50,000
as the entity framework DbContext.

47
00:02:50,000 --> 00:02:54,000
This is giving the AccountController access to that user's table

48
00:02:54,000 --> 00:02:57,000
through a DbContext derived class.

49
00:02:57,000 --> 00:02:58,000
But we want to control this.

50
00:02:58,000 --> 00:03:01,000
We want to have this as part of our DbContext.

51
00:03:01,000 --> 00:03:04,000
So I'm just going to delete this DbContext.

52
00:03:04,000 --> 00:03:05,000
We don't need it.

53
00:03:05,000 --> 00:03:08,000
We do need something to represent a user profile.

54
00:03:08,000 --> 00:03:10,000
So I might as well start with this class.

55
00:03:10,000 --> 00:03:12,000
It has a UserID and a UserName.

56
00:03:12,000 --> 00:03:14,000
I could add additional properties here.

57
00:03:14,000 --> 00:03:20,000
For instance if wanted to know a user's favorite restaurant then I can include

58
00:03:20,000 --> 00:03:22,000
that as another property in the user profile.

59
00:03:22,000 --> 00:03:26,000
But just so I know that this is my code, I want to own this code,

60
00:03:26,000 --> 00:03:29,000
it's not part of the generated code that came from this template really anymore.

61
00:03:29,000 --> 00:03:30,000
I've customize it.

62
00:03:30,000 --> 00:03:34,000
I'm going to cut it out of here and add it to its own class file.

63
00:03:34,000 --> 00:03:42,000
So let's add a class called UserProfile and I will delete what comes out of here by default

64
00:03:42,000 --> 00:03:45,000
and just paste in that UserProfile that we just had.

65
00:03:45,000 --> 00:03:47,000
I'll need to include a couple of namespaces here, too.

66
00:03:47,000 --> 00:03:53,000
So Ctrl period and bring in System.Component Model.DataAnnotations.Schema.

67
00:03:53,000 --> 00:03:57,000
This attribute is one way to tell the entity framework that when you need

68
00:03:57,000 --> 00:04:01,000
to store user profile information, when you need to store objects of this type,

69
00:04:01,000 --> 00:04:05,000
put it in a table with this name, UserProfile.

70
00:04:05,000 --> 00:04:08,000
We also need to bring in a namespace for the key attribute that's

71
00:04:08,000 --> 00:04:11,000
in the System.Component Model.DataAnnotations.

72
00:04:11,000 --> 00:04:14,000
We've used that before when we added some model validations.

73
00:04:14,000 --> 00:04:17,000
This particular attribute is a way to tell the entity framework

74
00:04:17,000 --> 00:04:20,000
that this is the primary key value for a user.

75
00:04:20,000 --> 00:04:25,000
And by the way, it's also an identity column, meaning the database will manage the values

76
00:04:25,000 --> 00:04:27,000
that get placed into here when you insert a record.

77
00:04:27,000 --> 00:04:30,000
It'll automatically be generated by SQL Server.

78
00:04:30,000 --> 00:04:36,000
And now that we have our own user profile class that can store our favorite restaurant,

79
00:04:36,000 --> 00:04:40,000
I need to define a way to get to that in my own DbContext class.

80
00:04:40,000 --> 00:04:48,000
So I will open this one up, OdeToFoodDb and let's add a property of type DbSet

81
00:04:48,000 --> 00:04:54,000
of UserProfile and we could call this UserProfiles.

82
00:04:54,000 --> 00:04:58,000
And now if you've been watching the previous modules, you know we've made a change

83
00:04:58,000 --> 00:04:59,000
to what we're storing in the database.

84
00:04:59,000 --> 00:05:02,000
We're going to need to do a schema migration.

85
00:05:02,000 --> 00:05:04,000
But before we can do that we have to get the project

86
00:05:04,000 --> 00:05:07,000
to build now that we've deleted some classes.

87
00:05:07,000 --> 00:05:11,000
Let me do a quick build and that would give me a list to work from.

88
00:05:11,000 --> 00:05:14,000
So first of all, if I double-click one of these errors,

89
00:05:14,000 --> 00:05:17,000
this Initialize SimpleMembershipAttribute doesn't exist any longer.

90
00:05:17,000 --> 00:05:18,000
That's okay.

91
00:05:18,000 --> 00:05:24,000
We're initializing things explicitly during application start, so I can just delete that.

92
00:05:24,000 --> 00:05:25,000
Then I'll double click another error.

93
00:05:25,000 --> 00:05:29,000
This one is complaining about UsersContext, we deleted that.

94
00:05:29,000 --> 00:05:33,000
That was what the AccountController was using to get to that UserProfile table.

95
00:05:33,000 --> 00:05:35,000
Now I can get to it through OdeToFoodDb.

96
00:05:35,000 --> 00:05:38,000
So let me just change this to use the var keyword and instead

97
00:05:38,000 --> 00:05:42,000
of a new UsersContext we'll instantiate a new OdeToFoodDb.

98
00:05:42,000 --> 00:05:48,000
Let me try another build, Shift Ctrl B. Now we've successfully built.

99
00:05:48,000 --> 00:05:52,000
Let's quickly migrate the database so we can store our custom information.

100
00:05:52,000 --> 00:05:55,000
I'll open up the Package Manager Console.

101
00:05:55,000 --> 00:06:00,000
We have implicit migrations enabled, so I should just be able to say, update database

102
00:06:00,000 --> 00:06:07,000
and I'll throw in the Verbose flag just so we can see exactly what it's going to do.

103
00:06:07,000 --> 00:06:09,000
And it finished the migrations.

104
00:06:09,000 --> 00:06:10,000
It's running the Seed method.

105
00:06:10,000 --> 00:06:14,000
But you can see where it went out and created a table, UserProfile, that has UserID,

106
00:06:14,000 --> 00:06:17,000
UserName, and FavoriteRestaurant.

107
00:06:17,000 --> 00:06:20,000
We can probably tweak the annotations on UserProfile

108
00:06:20,000 --> 00:06:23,000
so that User Name was an nvarchar max.

109
00:06:23,000 --> 00:06:26,000
It would be much better for performance if that had a reasonable size

110
00:06:26,000 --> 00:06:30,000
like nvarchar 255 or nvarchar 80.

111
00:06:30,000 --> 00:06:34,000
It will be simple enough to do that just using a string length attribute on UserName,

112
00:06:34,000 --> 00:06:35,000
and the same for FavoriteRestaurant.

113
00:06:35,000 --> 00:06:37,000
But at this point, we're good.

114
00:06:37,000 --> 00:06:40,000
We have more control over what's going to be happening in the database.

115
00:06:40,000 --> 00:06:43,000
And now, we can turn our attention to looking at how to register,

116
00:06:43,000 --> 00:06:47,000
how to log in, how to require authentication.

117
00:06:47,000 --> 00:59:00,000
( Pause )

