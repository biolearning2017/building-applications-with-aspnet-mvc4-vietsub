1
00:00:01,000 --> 00:00:05,000
Let's adds some filtering to our query with a where clause.

2
00:00:05,000 --> 00:00:10,000
But instead of using a where operator, in a hard coded value like I did in the slide

3
00:00:10,000 --> 00:00:15,000
that introduced you to LINQ, let me add a parameter because a user might come

4
00:00:15,000 --> 00:00:18,000
to the home page searching for a specific restaurant.

5
00:00:18,000 --> 00:00:24,000
So we will allow them to enter a searchTerm and I'll provide a default value of this for null,

6
00:00:24,000 --> 00:00:28,000
which is slightly redundant because if the MVC runtime doesn't find a searchTerm

7
00:00:28,000 --> 00:00:33,000
in the request, it will pass along a null for the string parameter.

8
00:00:33,000 --> 00:00:37,000
But there is a unit testing project in this solution that is invoking the index action

9
00:00:37,000 --> 00:00:40,000
and the unit test and it's not passing any parameters.

10
00:00:40,000 --> 00:00:42,000
So I'm just going to provide a default value here

11
00:00:42,000 --> 00:00:45,000
so that the compiler will be happy with that unit test.

12
00:00:45,000 --> 00:00:48,000
And now we can use that with a Where operator.

13
00:00:48,000 --> 00:00:56,000
I can say Where, given a restaurant r, r goes to and then we can check a searchTerm equals null.

14
00:00:56,000 --> 00:01:00,000
If searchTerm equals null, everything will be true, we want all the restaurants,

15
00:01:00,000 --> 00:01:06,000
we're not searching for any specific restaurant or r.Name starts

16
00:01:06,000 --> 00:01:09,000
with whatever searchTerm was entered.

17
00:01:09,000 --> 00:01:17,000
And now if I do a Build and refresh the Home application, we'll have the same result so far

18
00:01:17,000 --> 00:01:20,000
because we didn't enter a searchTerm but I just want to verify

19
00:01:20,000 --> 00:01:22,000
that it still works and it looks like it does.

20
00:01:22,000 --> 00:01:29,000
And now I can come up here and say searchTerm equals S, and now we just get the restaurants

21
00:01:29,000 --> 00:01:33,000
that starts with an S. So that looks good but of course the user might not know

22
00:01:33,000 --> 00:01:35,000
to enter something in the query string.

23
00:01:35,000 --> 00:01:39,000
How can we provide a bit of a user interface that allows them to do some filtering?

24
00:01:39,000 --> 00:01:43,000
That will require a modification to the index view.

25
00:01:43,000 --> 00:01:50,000
So lets' come in here and up above the list of cities, let's add a form.

26
00:01:50,000 --> 00:01:56,000
Now, I could add this form using HTML.begin form but there's no real special parameters

27
00:01:56,000 --> 00:02:00,000
that I need this form to have, so I'm just going to type in a form tag.

28
00:02:00,000 --> 00:02:04,000
I do want to change one thing about the default though, the default method.

29
00:02:04,000 --> 00:02:12,000
I want that to issue a get request but I don't need to specify a parameter for action.

30
00:02:12,000 --> 00:02:16,000
If there's no action there, it's just going to go back to the URL it came from which is perfect

31
00:02:16,000 --> 00:02:21,000
because we can show the index view, the user can type something in, hit the submit button

32
00:02:21,000 --> 00:02:26,000
and will go right back to where we came from which is the index action of the HomeController.

33
00:02:26,000 --> 00:02:30,000
I'll explain why I used the get method in just a second.

34
00:02:30,000 --> 00:02:40,000
But let's have an input type equals submit, value equals Search By Name.

35
00:02:40,000 --> 00:02:43,000
That will be the button that the user clicks when they want to do the search

36
00:02:43,000 --> 00:02:49,000
and then we'll have an input type equals search and that is

37
00:02:49,000 --> 00:02:51,000
where they can type in to perform the search.

38
00:02:51,000 --> 00:02:53,000
And, of course, we'll have to give this a name

39
00:02:53,000 --> 00:02:57,000
and remember ASP.NET MVC matches things up in the request by name.

40
00:02:57,000 --> 00:03:02,000
Because we have a searchTerm parameter on the index action, I would want the name of this

41
00:03:02,000 --> 00:03:05,000
to match, so the name of this should be searchTerm.

42
00:03:05,000 --> 00:03:06,000
So let's save everything.

43
00:03:06,000 --> 00:03:10,000
Do a build just to be safe and refresh the application to see what this looks like.

44
00:03:10,000 --> 00:03:16,000
And it's not the optimum user interface but it should be functional.

45
00:03:16,000 --> 00:03:19,000
If I go in and type a G and click Search

46
00:03:19,000 --> 00:03:23,000
By Name then you'll notice we get the right result, we get Great Lake.

47
00:03:23,000 --> 00:03:29,000
You can see in the query string, we have searchTerm equals G. And the reason that is

48
00:03:29,000 --> 00:03:32,000
in the query string is because our form method equals get.

49
00:03:32,000 --> 00:03:36,000
When you click on a submit button for a form that does a get request,

50
00:03:36,000 --> 00:03:40,000
it has to wrap up all these input values and put them in the query string.

51
00:03:40,000 --> 00:03:45,000
If instead we had used post and done a submit, all these values would be inside

52
00:03:45,000 --> 00:03:49,000
that it should be message body, you wouldn't see them in the query string.

53
00:03:49,000 --> 00:03:54,000
It's nice to use a get request here because by putting these things in the query string,

54
00:03:54,000 --> 00:03:58,000
someone can copy this and paste it into an e-mail or they can bookmark it,

55
00:03:58,000 --> 00:04:02,000
and they can always come back to this page and see all of the restaurants that start with a G

56
00:04:02,000 --> 00:04:05,000
or an S or whatever they're looking for.

57
00:04:05,000 --> 00:04:11,000
You do have to be careful about when you use get because you wouldn't want to use a get request

58
00:04:11,000 --> 00:04:16,000
for a form that is submitting information to the server to save in the database,

59
00:04:16,000 --> 00:04:19,000
so something that is processing a credit card or creating a restaurant

60
00:04:19,000 --> 00:04:23,000
or editing a review, those are all post operations.

61
00:04:23,000 --> 00:04:26,000
Post operations are write operations.

62
00:04:26,000 --> 00:04:28,000
A search is a read operation.

63
00:04:28,000 --> 00:59:00,000
It's perfectly safe to issue a get request or a search request.

