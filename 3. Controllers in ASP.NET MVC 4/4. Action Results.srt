1
00:00:00,000 --> 00:00:05,000
At this point we've used routing data and query string values as inputs

2
00:00:05,000 --> 00:00:09,000
to our cuisine controller search action and that will prove to be useful knowledge later

3
00:00:09,000 --> 00:00:14,000
when we start doing data access and need to use those incoming values but for now I want

4
00:00:14,000 --> 00:00:17,000
to talk about the output of an action.

5
00:00:17,000 --> 00:00:20,000
We just used the content result to return a string literal from our action

6
00:00:20,000 --> 00:00:25,000
and the producing method which is a factory type method that produces

7
00:00:25,000 --> 00:00:28,000
and action result, its called content.

8
00:00:28,000 --> 00:00:32,000
So that's simply the method that you need to invoke to create a content result.

9
00:00:32,000 --> 00:00:36,000
There's many other types of action results available the name column represents the type

10
00:00:36,000 --> 00:00:41,000
that is derived from action result, the type of the object that you'll create

11
00:00:41,000 --> 00:00:43,000
and produce in return from an action.

12
00:00:43,000 --> 00:00:46,000
So all of the class names that you see here they all derive from action result

13
00:00:46,000 --> 00:00:50,000
and the producing method is the factory method you can invoke

14
00:00:50,000 --> 00:00:54,000
to construct a particular result, it puts things together for you.

15
00:00:54,000 --> 00:00:58,000
Previously we've also used the view method to produce a view result and we saw

16
00:00:58,000 --> 00:01:02,000
in the introduction how this will render a view that is somewhere inside of our views folder,

17
00:01:02,000 --> 00:01:06,000
there are also results we can use to return a file back to the client,

18
00:01:06,000 --> 00:01:12,000
return data in java script object notation for java script to consume and also a result

19
00:01:12,000 --> 00:01:15,000
to tell the browser to redirect to a different URL.

20
00:01:15,000 --> 00:01:18,000
Let's see how some of these different action results behave

21
00:01:18,000 --> 00:01:22,000
by switching back into visual studio.

22
00:01:22,000 --> 00:01:26,000
We've seen how the content and view results work, let's try a different result,

23
00:01:26,000 --> 00:01:29,000
let's look at one of the redirect results,

24
00:01:29,000 --> 00:01:33,000
you can see just in the intelliSense window there's many types of redirects,

25
00:01:33,000 --> 00:01:40,000
for instance there is a redirect permanent, this returns an http 3 or 2 status code

26
00:01:40,000 --> 00:01:45,000
which would basically say if someone came to this cuisine controller it would say go

27
00:01:45,000 --> 00:01:48,000
over the Microsoft dot come and never look back this is a permanent redirect,

28
00:01:48,000 --> 00:01:50,000
you never have to come here again.

29
00:01:50,000 --> 00:01:56,000
There's also redirects that you can use to go to specific actions in the same controller

30
00:01:56,000 --> 00:02:01,000
or an action on a different controller that is in this application so I could say when you come

31
00:02:01,000 --> 00:02:06,000
to the cuisine controller what I want to do is redirect you to the index action

32
00:02:06,000 --> 00:02:11,000
of the home controller and I can even pass along values with this.

33
00:02:11,000 --> 00:02:14,000
This is a temporary redirect and I'll show you later in the course why these types

34
00:02:14,000 --> 00:02:17,000
of redirects are very common for some scenarios.

35
00:02:17,000 --> 00:02:21,000
What's interesting about this redirect to action is that it actually coordinates

36
00:02:21,000 --> 00:02:25,000
with the routing engine behind the scenes, it walks up toe the routing engine and says

37
00:02:25,000 --> 00:02:30,000
if I want to go to a URL that would reach the index action of the home controller what would

38
00:02:30,000 --> 00:02:34,000
that URL look like and based on the way we've configured the routing engine,

39
00:02:34,000 --> 00:02:36,000
the routing engine will reply with the proper URL

40
00:02:36,000 --> 00:02:40,000
and you can even pass along additional parameters, if the parameters are known

41
00:02:40,000 --> 00:02:44,000
to the route they're actually in the URL, the routing engine will produce a URL

42
00:02:44,000 --> 00:02:50,000
that has the value in the URL but I can also say let's go to the index action

43
00:02:50,000 --> 00:02:54,000
of the home controller and pass along the name so the way you do this is

44
00:02:54,000 --> 00:02:59,000
to pass an anonymously typed object in as the third parameter, mvc framework will pick

45
00:02:59,000 --> 00:03:03,000
that apart and decide that okay you need to get a parameter called name over here.

46
00:03:03,000 --> 00:03:11,000
So what would this look like, let me do a build, we're currently at cuisine slash Swedish

47
00:03:11,000 --> 00:03:17,000
so the cuisine is Swedish but after I've built the application if I refresh this we should end

48
00:03:17,000 --> 00:03:23,000
up back on the home page and notice the URL is just slash query string name equals Swedish

49
00:03:23,000 --> 00:03:27,000
because there is no name in the URL when we go to that default route

50
00:03:27,000 --> 00:03:31,000
to reach the home controller and so the framework decided to build this URL

51
00:03:31,000 --> 00:03:33,000
with the name parameter in the query string.

52
00:03:33,000 --> 00:03:37,000
We know now that it's very easy to pull that value out of the query string if we need it

53
00:03:37,000 --> 00:03:41,000
and this was a redirect result so if you're not familiar with that the browser

54
00:03:41,000 --> 00:03:46,000
of requested slash cuisine slash Swedish and the server responded with an http code

55
00:03:46,000 --> 00:03:52,000
and a location basically saying no you don't want this URL you want to go over here

56
00:03:52,000 --> 00:03:54,000
so the browser had to issue another get request and come back here

57
00:03:54,000 --> 00:03:57,000
to the home controller, that's how we ended up here.

58
00:03:57,000 --> 00:04:04,000
You can also if you need to redirect to a route by name so here I could say redirect to route

59
00:04:04,000 --> 00:04:11,000
and say please redirect to the default route and now I could plug in values if I wanted to,

60
00:04:11,000 --> 00:04:22,000
I could say please pass along so that we reach the home controller and the about action,

61
00:04:22,000 --> 00:04:26,000
so with redirect of the route you don't pass the controller

62
00:04:26,000 --> 00:04:31,000
and action name was parameters you have to pass them in an anonymously typed object

63
00:04:31,000 --> 00:04:35,000
but those values will match up with however the route was configured.

64
00:04:35,000 --> 00:04:37,000
Let's try a couple other different type of routes,

65
00:04:37,000 --> 00:04:43,000
just for kicks let's return a file result, so I can return file and here I can pass

66
00:04:43,000 --> 00:04:48,000
in the file contents if I already have them loaded into a byte array,

67
00:04:48,000 --> 00:04:52,000
there's different overloads of this, just pass in a stream if I already have a stream open

68
00:04:52,000 --> 00:04:55,000
or pass in a file name the mvc framework will figure out how to pick

69
00:04:55,000 --> 00:04:57,000
that up off disk and pass it back.

70
00:04:57,000 --> 00:05:04,000
I'm going to pick the overload here where I just need to pass a file name and a content type.

71
00:05:04,000 --> 00:05:08,000
So this will be a little bit weird but let's just say when the user comes

72
00:05:08,000 --> 00:05:13,000
to the search action of the cuisine controller we want to return our site style sheet,

73
00:05:13,000 --> 00:05:17,000
site dot css it's in the content directory.

74
00:05:17,000 --> 00:05:22,000
So I'll need to come up with the physical path to that file, I can do that...do

75
00:05:22,000 --> 00:05:26,000
that server property here it is one more time, this time I'm going to use the map path method

76
00:05:26,000 --> 00:05:31,000
on that and from here what I can do is pass in a virtual path,

77
00:05:31,000 --> 00:05:37,000
the path that's in my web application slash content slash site dot css

78
00:05:37,000 --> 00:05:40,000
and server dot map path will turn that into a physical path

79
00:05:40,000 --> 00:05:44,000
that the operating system understands and I can say

80
00:05:44,000 --> 00:05:49,000
that the content type of this is text slash css.

81
00:05:49,000 --> 00:05:54,000
Let me do a build and let's see what happens when I come back out to the browser

82
00:05:54,000 --> 00:05:59,000
and refresh the cuisine controller this time, now what I'm looking

83
00:05:59,000 --> 00:06:06,000
at is essentially our style sheet, site dot css, we returned that as the action result.

84
00:06:06,000 --> 00:06:14,000
Let's try one more, let's come back and return a Json method and then pass in an object.

85
00:06:14,000 --> 00:06:18,000
Behind the scenes what will happen is the framework will run a java script serialize

86
00:06:18,000 --> 00:06:22,000
over this object to turn it into java script object notation.

87
00:06:22,000 --> 00:06:25,000
And this object can be pretty much anything, it can be one of your models,

88
00:06:25,000 --> 00:06:31,000
it can be just an anonymously typed object so I could say give me an object with message equal

89
00:06:31,000 --> 00:06:38,000
to that current message that we computed and I'll just throw in something extra just

90
00:06:38,000 --> 00:06:42,000
for the fun of it so I don't have a name property called Scott and I need

91
00:06:42,000 --> 00:06:46,000
to add one more parameter here to allow this to work when I get request,

92
00:06:46,000 --> 00:06:52,000
I need to explicitly say allow a get request to retrieve this Json and now do a build.

93
00:06:52,000 --> 00:06:59,000
Let's come back to the browser and refresh and there you can see Json appears

94
00:06:59,000 --> 00:07:03,000
in the browser window, message is French name of Scott.

95
00:07:03,000 --> 00:07:06,000
Later in the course we'll see just how easy it is to take that and consume it

96
00:07:06,000 --> 00:59:00,000
from java script then turn it into anything we want, turn it into an html display.

